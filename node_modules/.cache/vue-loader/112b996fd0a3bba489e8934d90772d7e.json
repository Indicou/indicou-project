{"remainingRequest":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\indicou\\desenvolvimento\\Indicou\\src\\components\\results\\CardResults.vue?vue&type=template&id=00c275ad&","dependencies":[{"path":"D:\\indicou\\desenvolvimento\\Indicou\\src\\components\\results\\CardResults.vue","mtime":1625179179127},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}