{"remainingRequest":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\indicou\\desenvolvimento\\Indicou\\src\\views\\HomeBS.vue?vue&type=template&id=33db1c2a&scoped=true&","dependencies":[{"path":"D:\\indicou\\desenvolvimento\\Indicou\\src\\views\\HomeBS.vue","mtime":1621630000360},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\indicou\\desenvolvimento\\Indicou\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}